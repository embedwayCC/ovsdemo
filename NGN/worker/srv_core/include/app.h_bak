#ifndef __APP_H__
#define __APP_H__

enum {
	CODEVICE_STAT_REACHABLE,
	CODEVICE_STAT_UNREACHABLE,
	CODEVICE_STAT_ONLINE,
	CODEVICE_STAT_OFFLINE,
	CODEVICE_STAT_HELLO_RECVD, 
};

#include "appdefs.h"
extern int g_warm_syn_shutdown;
int save_config_to_sync(int slot_id);
int OeAp_Initialize(void);
int OeAp_Finalize(void);
void OeAp_Init_Codevice(void);
int OeAp_Init_Config(void);
int OeAp_Get_My_Slot_Id(void);
int OeAp_Get_My_Slot_Chassis_Id(void);
board_type_t OeAp_Get_My_Board_Type(void);
rio_type_t OeAp_Get_My_Rio_Type(void);
char *OeAp_Get_My_Board_Version(void);
char *OeAp_Get_My_Board_Serial_Num(void);
platform_t OeAp_Get_Platform(void);
int OeAp_Set_Platform(int);
int OeAp_Get_Node_Status(int);
int OeAp_Set_Node_Status(int, int);
int OeAp_Get_Node_Type(int);
int OeAp_Get_Node_Rio_Type(int);
int OeAp_Set_Node_Type(int, int);
int OeAp_Set_Node_Rio_Type(int, int);
int OeAp_Sys_Tftp(char *, char *, int);
int OeAp_Sys_Tftp_Path(char *, char *, char *, int);
bcm_port_map_t *OeAp_Get_Bcm_Portmap_By_Module(int);
bcm_port_map_t *OeAp_Get_Bcm_Portmap_By_Sm(int, int);
int OeAp_Get_Bcm_Portmap_By_Slot_Module(bcm_port_map_t *port_map_p, int slot, int module);
int OeAp_Get_Bcm_Unit_Port(bcm_port_map_t *bpm, int module, int port, int *bcm_unit, int *bcm_port);
int OeAp_Sprint_Members_From_Mask(char *, unsigned long long, int);
int OeBcm_Initialize(void);
void OeAp_Configure_Changed_Snmp_Trap_Send(void);
void OeAp_Board_Status_Changed_Snmp_Trap_Send(char *string);
void OeAp_Board_Abnormal_Snmp_Trap_Send(char *string);
void OeAp_Set_Node_Opmode(int, int mode);
int OeAp_Get_Node_Opmode(int);
void *OeAp_Get_Ev_Handle_By_Slot(int slot);
void _process_channel(int slot, int type, int status);

int _print_smp_buf(int slots, int modules, unsigned long long ports, char *smp_buf);
int print_outports_id_list(char *buf, int *list, int num);

int master_slave_init(void);
int is_master_om_board(void);
int is_om_board(void);
int get_om_state(int slot_id);
int set_om_state(int slot_id, int status);
void process_om_become_master(void);
void process_om_become_slave(void);
int check_user_permit(int uid);

int OeAp_Get_My_Used_Info(rpc_used_info_t *used_info);
int OeAp_Save_All_Used_info(rpc_used_info_t *used_info);

#endif
